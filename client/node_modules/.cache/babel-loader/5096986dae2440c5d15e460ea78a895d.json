{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amir\\\\Desktop\\\\weather-app\\\\client\\\\src\\\\components\\\\screens\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport \"../styles/WeatherAndForecast.css\";\nimport getAddressOfCoordinates from \"../Services/GeoCoordinatesAdress\";\nimport getCoordinatesOfAddress from \"../Services/WeatherCorrdinates\";\nimport WeatherAndForecast from \"./WeatherAndForecast\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [address, setAddress] = useState(\"\");\n  const [coordinates, setCoordinates] = useState({});\n  const [weatherAndForecastInfo, setWeatherAndForecastInfo] = useState({});\n  const [locationInfo, setLocationInfo] = useState({});\n  const [contentState, setContentState] = useState(\"blank\");\n\n  function searchCity(target) {\n    setAddress(target);\n  }\n\n  function showWarning() {\n    setContentState(\"warning\");\n    setTimeout(() => setContentState(\"blank\"), 3000);\n  }\n\n  useEffect(() => {\n    function makeRequest(position) {\n      console.log(position);\n      setContentState(\"loading\");\n      getAddressOfCoordinates(position.coords.latitude, position.coords.longitude).then(res => {\n        console.log(res);\n        setLocationInfo({\n          city: res.data.results[0].components.city_district,\n          town: res.data.results[0].components.town,\n          state: res.data.results[0].components.state_code,\n          country: res.data.results[0].components.country_code\n        });\n      }).then(() => setCoordinates({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      })).catch(error => showWarning());\n    }\n\n    function catchError(err) {\n      alert(\"ERROR(\" + err.code + \"): \" + err.message);\n    }\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(makeRequest, catchError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    if (address === \"\") return;\n    setContentState(\"loading\");\n    getCoordinatesOfAddress(address).then(res => {\n      if (res.data.results.length === 0 || res.data.results[0].components.city === undefined && res.data.results[0].components.town === undefined) {\n        showWarning();\n        return;\n      }\n\n      setCoordinates(res.data.results[0].geometry);\n      setLocationInfo({\n        city: res.data.results[0].components.city,\n        town: res.data.results[0].components.town,\n        state: res.data.results[0].components.state_code,\n        country: res.data.results[0].components.country_code\n      });\n      console.log(coordinates);\n      console.log(locationInfo);\n    }).catch(error => showWarning());\n  }, [address]);\n  useEffect(() => {\n    if (Object.keys(coordinates).length === 0) return;\n    WeatherAndForecast(coordinates).then(res => {\n      setWeatherAndForecastInfo(res.data);\n      setContentState(\"weatherAndForecast\");\n    }).catch(error => showWarning());\n  }, [coordinates]);\n  const Main = {\n    blank: () => null,\n    loading: () => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n    warning: () => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n    weatherAndForecast: () => /*#__PURE__*/_jsxDEV(WeatherAndForecast, {\n      weatherInfo: weatherAndForecastInfo,\n      location: locationInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App__container\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          searchCity: searchCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), Main[contentState]()]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"7Qmm00kSuolrNULfm90o4eq/AjI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Amir/Desktop/weather-app/client/src/components/screens/Home.jsx"],"names":["React","useState","useEffect","Header","getAddressOfCoordinates","getCoordinatesOfAddress","WeatherAndForecast","Home","address","setAddress","coordinates","setCoordinates","weatherAndForecastInfo","setWeatherAndForecastInfo","locationInfo","setLocationInfo","contentState","setContentState","searchCity","target","showWarning","setTimeout","makeRequest","position","console","log","coords","latitude","longitude","then","res","city","data","results","components","city_district","town","state","state_code","country","country_code","lat","lng","catch","error","catchError","err","alert","code","message","navigator","geolocation","getCurrentPosition","length","undefined","geometry","Object","keys","Main","blank","loading","warning","weatherAndForecast"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./Header\"\r\nimport \"../styles/WeatherAndForecast.css\";\r\n\r\nimport getAddressOfCoordinates from \"../Services/GeoCoordinatesAdress\"\r\nimport getCoordinatesOfAddress from \"../Services/WeatherCorrdinates\"\r\nimport WeatherAndForecast from \"./WeatherAndForecast\";\r\n\r\nexport default function Home() {\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState({});\r\n  const [weatherAndForecastInfo, setWeatherAndForecastInfo] = useState({});\r\n  const [locationInfo, setLocationInfo] = useState({});\r\n  const [contentState, setContentState] = useState(\"blank\");\r\n\r\n  function searchCity(target) {\r\n    setAddress(target);\r\n  }\r\n\r\n  function showWarning() {\r\n    setContentState(\"warning\");\r\n    setTimeout(() => setContentState(\"blank\"), 3000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    function makeRequest(position) {\r\n      console.log(position)\r\n      setContentState(\"loading\");\r\n      getAddressOfCoordinates(\r\n        position.coords.latitude,\r\n        position.coords.longitude\r\n      )\r\n        .then((res) => {\r\n          console.log(res)\r\n          setLocationInfo({\r\n            city: res.data.results[0].components.city_district,\r\n            town: res.data.results[0].components.town,\r\n            state: res.data.results[0].components.state_code,\r\n            country: res.data.results[0].components.country_code\r\n          });\r\n        })\r\n        .then(() =>\r\n          \r\n          setCoordinates({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          })\r\n        )\r\n        .catch((error) => showWarning());\r\n    }\r\n\r\n    function catchError(err) {\r\n      alert(\"ERROR(\" + err.code + \"): \" + err.message);\r\n    }\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(makeRequest, catchError);\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (address === \"\") return;\r\n\r\n    setContentState(\"loading\");\r\n    getCoordinatesOfAddress(address)\r\n      .then((res) => {\r\n        if (\r\n          res.data.results.length === 0 ||\r\n          (res.data.results[0].components.city === undefined &&\r\n            res.data.results[0].components.town === undefined)\r\n        ) {\r\n          showWarning();\r\n          return;\r\n        }\r\n\r\n        setCoordinates(res.data.results[0].geometry);\r\n        setLocationInfo({\r\n          city: res.data.results[0].components.city,\r\n          town: res.data.results[0].components.town,\r\n          state: res.data.results[0].components.state_code,\r\n          country: res.data.results[0].components.country_code\r\n        });\r\n        console.log(coordinates)\r\n        console.log(locationInfo)\r\n      })\r\n      .catch((error) => showWarning());\r\n  }, [address]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(coordinates).length === 0) return;\r\n\r\n    WeatherAndForecast(coordinates)\r\n      .then((res) => {\r\n        setWeatherAndForecastInfo(res.data);\r\n        setContentState(\"weatherAndForecast\");\r\n      })\r\n      .catch((error) => showWarning());\r\n  }, [coordinates]);\r\n\r\n  const Main = {\r\n    blank: () => null,\r\n    loading: () => <></>,\r\n    warning: () => <></>,\r\n    weatherAndForecast: () => (\r\n      <WeatherAndForecast\r\n        weatherInfo={weatherAndForecastInfo}\r\n        location={locationInfo}\r\n      />\r\n    )\r\n  };\r\n  \r\n    return ( \r\n        <div className=\"App\">\r\n        <div className=\"App__container\">\r\n          <>\r\n            <Header searchCity={searchCity} />\r\n            {Main[contentState]()}\r\n          </>\r\n        </div>\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}