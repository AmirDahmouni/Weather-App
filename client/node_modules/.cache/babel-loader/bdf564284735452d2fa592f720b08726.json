{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amir\\\\Desktop\\\\weather-app\\\\client\\\\src\\\\components\\\\screens\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport \"../styles/WeatherAndForecast.css\";\nimport getAddressOfCoordinates from \"../Services/reverseGeocoding\";\nimport getCoordinatesOfAddress from \"../Services/forwardGeocoding\";\nimport getWeatherAndForecast from \"../Services/weatherAndForecast\";\nimport WeatherAndForecast from \"./WeatherAndForecast\";\nimport GlobalContext from \"../../GlobalContext\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const context = React.useContext(GlobalContext);\n  const [address, setAddress] = useState(\"\");\n  const [coordinates, setCoordinates] = useState({});\n  const [contentState, setContentState] = useState(\"blank\");\n\n  function searchCity(target) {\n    setAddress(target.charAt(0).toUpperCase() + target.slice(1));\n  }\n\n  function showWarning() {\n    setContentState(\"warning\");\n    setTimeout(() => setContentState(\"blank\"), 3000);\n  }\n\n  function makeRequest(_ref) {\n    let {\n      coords\n    } = _ref;\n    setContentState(\"loading\");\n    getAddressOfCoordinates(coords.latitude, coords.longitude).then(res => {\n      context.setLocationInfo({\n        city: res.data.results[0].components.city_district,\n        town: res.data.results[0].components.town,\n        state: res.data.results[0].components.state_code,\n        country: res.data.results[0].components.country_code\n      });\n    }).then(() => setCoordinates({\n      lat: coords.latitude,\n      lng: coords.longitude\n    })).catch(error => showWarning());\n  }\n\n  useEffect(() => {\n    if (navigator.geolocation) navigator.geolocation.getCurrentPosition(makeRequest, err => alert(\"ERROR(\" + err.code + \"): \" + err.message));else alert(\"Geolocation is not supported by this browser.\");\n  }, []);\n  useEffect(() => {\n    if (address === \"\") return;\n    setContentState(\"loading\");\n    getCoordinatesOfAddress(address).then(res => {\n      if (res.data.results.length === 0 || res.data.results[0].components.city === undefined && res.data.results[0].components.town === undefined) {\n        showWarning();\n        return;\n      }\n\n      setCoordinates(res.data.results[0].geometry);\n      context.setLocationInfo({\n        city: res.data.results[0].components.city,\n        town: res.data.results[0].components.town,\n        state: res.data.results[0].components.state_code,\n        country: res.data.results[0].components.country_code\n      });\n    }).catch(error => showWarning());\n  }, [address]);\n  useEffect(async () => {\n    if (Object.keys(coordinates).length === 0) return;\n    getWeatherAndForecast(coordinates).then(res => {\n      console.log(res);\n      context.setWeatherAndForecastInfo(res.data);\n      setContentState(\"weatherAndForecast\");\n    }).catch(error => showWarning());\n  }, [coordinates]);\n  const Main = {\n    blank: () => null,\n    loading: () => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n    warning: () => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n    weatherAndForecast: () => /*#__PURE__*/_jsxDEV(WeatherAndForecast, {\n      coordinates: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App__container\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          searchCity: searchCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), Main[contentState]()]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"vsyRCwGHRiLuIx2HAmkF3Ap9f1Q=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Amir/Desktop/weather-app/client/src/components/screens/Home.jsx"],"names":["React","useState","useEffect","Header","getAddressOfCoordinates","getCoordinatesOfAddress","getWeatherAndForecast","WeatherAndForecast","GlobalContext","Home","context","useContext","address","setAddress","coordinates","setCoordinates","contentState","setContentState","searchCity","target","charAt","toUpperCase","slice","showWarning","setTimeout","makeRequest","coords","latitude","longitude","then","res","setLocationInfo","city","data","results","components","city_district","town","state","state_code","country","country_code","lat","lng","catch","error","navigator","geolocation","getCurrentPosition","err","alert","code","message","length","undefined","geometry","Object","keys","console","log","setWeatherAndForecastInfo","Main","blank","loading","warning","weatherAndForecast"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./Header\"\r\nimport \"../styles/WeatherAndForecast.css\";\r\n\r\nimport getAddressOfCoordinates from \"../Services/reverseGeocoding\";\r\nimport getCoordinatesOfAddress from \"../Services/forwardGeocoding\";\r\nimport getWeatherAndForecast from \"../Services/weatherAndForecast\";\r\nimport WeatherAndForecast from \"./WeatherAndForecast\";\r\nimport GlobalContext from \"../../GlobalContext\";\r\n\r\n\r\nexport default function Home() {\r\n\r\n  const context = React.useContext(GlobalContext)\r\n  const [address, setAddress] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState({});\r\n  const [contentState, setContentState] = useState(\"blank\");\r\n\r\n  function searchCity(target) {\r\n    setAddress(target.charAt(0).toUpperCase() + target.slice(1));\r\n  }\r\n\r\n  function showWarning() {\r\n    setContentState(\"warning\");\r\n    setTimeout(() => setContentState(\"blank\"), 3000);\r\n  }\r\n\r\n  function makeRequest({coords}) {\r\n    setContentState(\"loading\");\r\n    getAddressOfCoordinates(coords.latitude,coords.longitude)\r\n    .then((res) => {\r\n      context.setLocationInfo({\r\n          city: res.data.results[0].components.city_district,\r\n          town: res.data.results[0].components.town,\r\n          state: res.data.results[0].components.state_code,\r\n          country: res.data.results[0].components.country_code\r\n        });\r\n    })\r\n    .then(() =>\r\n        setCoordinates({\r\n          lat: coords.latitude,\r\n          lng: coords.longitude\r\n        })\r\n    )\r\n    .catch((error) => showWarning());\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    if (navigator.geolocation) \r\n      navigator.geolocation.getCurrentPosition(makeRequest, (err)=>alert(\"ERROR(\" + err.code + \"): \" + err.message));\r\n    else \r\n      alert(\"Geolocation is not supported by this browser.\");\r\n    \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (address === \"\") return;\r\n   \r\n    setContentState(\"loading\");\r\n    getCoordinatesOfAddress(address)\r\n      .then((res) => {\r\n        if (\r\n          res.data.results.length === 0 ||\r\n          (res.data.results[0].components.city === undefined &&\r\n            res.data.results[0].components.town === undefined)\r\n        ) {\r\n          showWarning();\r\n          return;\r\n        }\r\n        setCoordinates(res.data.results[0].geometry);\r\n        context.setLocationInfo({\r\n          city: res.data.results[0].components.city,\r\n          town: res.data.results[0].components.town,\r\n          state: res.data.results[0].components.state_code,\r\n          country: res.data.results[0].components.country_code\r\n        });\r\n      })\r\n      .catch((error) => showWarning());\r\n  }, [address]);\r\n\r\n  useEffect(async() => {\r\n    if (Object.keys(coordinates).length === 0) return;\r\n\r\n    getWeatherAndForecast(coordinates)\r\n      .then((res) => {\r\n        console.log(res)\r\n        context.setWeatherAndForecastInfo(res.data);\r\n        setContentState(\"weatherAndForecast\");\r\n      })\r\n      .catch((error) => showWarning());\r\n  }, [coordinates]);\r\n\r\n\r\n  const Main = {\r\n    blank: () => null,\r\n    loading: () => <></>,\r\n    warning: () => <></>,\r\n    weatherAndForecast: () => (\r\n      <WeatherAndForecast\r\n        coordinates={coordinates}\r\n      />\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App__container\">\r\n        <>\r\n          <Header searchCity={searchCity} />\r\n          {Main[contentState]()}\r\n        </>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}