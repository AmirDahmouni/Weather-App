{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amir\\\\Desktop\\\\weather-app\\\\client\\\\src\\\\components\\\\screens\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [address, setAddress] = useState(\"\");\n  const [coordinates, setCoordinates] = useState({});\n  const [weatherAndForecastInfo, setWeatherAndForecastInfo] = useState({});\n  const [locationInfo, setLocationInfo] = useState({});\n  const [contentState, setContentState] = useState(\"blank\");\n  useEffect(() => {\n    function makeRequest(position) {\n      setContentState(\"loading\");\n      getAddressOfCoordinates(position.coords.latitude, position.coords.longitude).then(res => {\n        setLocationInfo({\n          city: res.data.results[0].components.city_district,\n          town: res.data.results[0].components.town,\n          state: res.data.results[0].components.state_code,\n          country: res.data.results[0].components.country_code\n        });\n      }).then(() => setCoordinates({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      })).catch(error => showWarning());\n    }\n\n    function catchError(err) {\n      alert(\"ERROR(\" + err.code + \"): \" + err.message);\n    }\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(makeRequest, catchError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App__container\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          searchCity: \"searchCity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"Bw7xxyV8nGKZEo9eQ0rSDkisBXo=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Amir/Desktop/weather-app/client/src/components/screens/Home.jsx"],"names":["React","useState","useEffect","Header","Home","address","setAddress","coordinates","setCoordinates","weatherAndForecastInfo","setWeatherAndForecastInfo","locationInfo","setLocationInfo","contentState","setContentState","makeRequest","position","getAddressOfCoordinates","coords","latitude","longitude","then","res","city","data","results","components","city_district","town","state","state_code","country","country_code","lat","lng","catch","error","showWarning","catchError","err","alert","code","message","navigator","geolocation","getCurrentPosition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,sBAAD,EAAyBC,yBAAzB,IAAsDT,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,OAAD,CAAhD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASa,WAAT,CAAqBC,QAArB,EAA+B;AAC7BF,MAAAA,eAAe,CAAC,SAAD,CAAf;AACAG,MAAAA,uBAAuB,CACrBD,QAAQ,CAACE,MAAT,CAAgBC,QADK,EAErBH,QAAQ,CAACE,MAAT,CAAgBE,SAFK,CAAvB,CAIGC,IAJH,CAISC,GAAD,IAAS;AACbV,QAAAA,eAAe,CAAC;AACdW,UAAAA,IAAI,EAAED,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,UAApB,CAA+BC,aADvB;AAEdC,UAAAA,IAAI,EAAEN,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,UAApB,CAA+BE,IAFvB;AAGdC,UAAAA,KAAK,EAAEP,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,UAApB,CAA+BI,UAHxB;AAIdC,UAAAA,OAAO,EAAET,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,UAApB,CAA+BM;AAJ1B,SAAD,CAAf;AAMD,OAXH,EAYGX,IAZH,CAYQ,MACJb,cAAc,CAAC;AACbyB,QAAAA,GAAG,EAAEjB,QAAQ,CAACE,MAAT,CAAgBC,QADR;AAEbe,QAAAA,GAAG,EAAElB,QAAQ,CAACE,MAAT,CAAgBE;AAFR,OAAD,CAblB,EAkBGe,KAlBH,CAkBUC,KAAD,IAAWC,WAAW,EAlB/B;AAmBD;;AAED,aAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvBC,MAAAA,KAAK,CAAC,WAAWD,GAAG,CAACE,IAAf,GAAsB,KAAtB,GAA8BF,GAAG,CAACG,OAAnC,CAAL;AACD;;AAED,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC9B,WAAzC,EAAsDuB,UAAtD;AACD,KAFD,MAEO;AACLE,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACD;AACF,GAjCQ,EAiCN,EAjCM,CAAT;AAmCE,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,UAAU,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAvDuBpC,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./Header\"\r\n\r\n\r\nexport default function Home() {\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState({});\r\n  const [weatherAndForecastInfo, setWeatherAndForecastInfo] = useState({});\r\n  const [locationInfo, setLocationInfo] = useState({});\r\n  const [contentState, setContentState] = useState(\"blank\");\r\n\r\n\r\n  useEffect(() => {\r\n    function makeRequest(position) {\r\n      setContentState(\"loading\");\r\n      getAddressOfCoordinates(\r\n        position.coords.latitude,\r\n        position.coords.longitude\r\n      )\r\n        .then((res) => {\r\n          setLocationInfo({\r\n            city: res.data.results[0].components.city_district,\r\n            town: res.data.results[0].components.town,\r\n            state: res.data.results[0].components.state_code,\r\n            country: res.data.results[0].components.country_code\r\n          });\r\n        })\r\n        .then(() =>\r\n          setCoordinates({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          })\r\n        )\r\n        .catch((error) => showWarning());\r\n    }\r\n\r\n    function catchError(err) {\r\n      alert(\"ERROR(\" + err.code + \"): \" + err.message);\r\n    }\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(makeRequest, catchError);\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }, []);\r\n\r\n    return ( \r\n        <div className=\"App\">\r\n        <div className=\"App__container\">\r\n          <>\r\n            <Header searchCity={\"searchCity\"} />\r\n            \r\n          </>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}